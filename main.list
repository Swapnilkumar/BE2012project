
main.elf:     file format elf32-littlearm


Disassembly of section .text:

08000000 <vector_table>:
 8000000:	20000800 	andcs	r0, r0, r0, lsl #16
 8000004:	08000149 	stmdaeq	r0, {r0, r3, r6, r8}
 8000008:	08000225 	stmdaeq	r0, {r0, r2, r5, r9}
 800000c:	08000231 	stmdaeq	r0, {r0, r4, r5, r9}
 8000010:	0800023d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r9}
 8000014:	08000205 	stmdaeq	r0, {r0, r2, r9}
 8000018:	0800013d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r8}
	...
 800002c:	08000225 	stmdaeq	r0, {r0, r2, r5, r9}
 8000030:	08000225 	stmdaeq	r0, {r0, r2, r5, r9}
 8000034:	00000000 	andeq	r0, r0, r0
 8000038:	08000225 	stmdaeq	r0, {r0, r2, r5, r9}
 800003c:	08000225 	stmdaeq	r0, {r0, r2, r5, r9}
 8000040:	08000225 	stmdaeq	r0, {r0, r2, r5, r9}
 8000044:	08000225 	stmdaeq	r0, {r0, r2, r5, r9}
 8000048:	08000225 	stmdaeq	r0, {r0, r2, r5, r9}
 800004c:	08000225 	stmdaeq	r0, {r0, r2, r5, r9}
 8000050:	08000225 	stmdaeq	r0, {r0, r2, r5, r9}
 8000054:	08000225 	stmdaeq	r0, {r0, r2, r5, r9}
 8000058:	08000225 	stmdaeq	r0, {r0, r2, r5, r9}
 800005c:	08000225 	stmdaeq	r0, {r0, r2, r5, r9}
 8000060:	08000225 	stmdaeq	r0, {r0, r2, r5, r9}
 8000064:	08000225 	stmdaeq	r0, {r0, r2, r5, r9}
 8000068:	08000225 	stmdaeq	r0, {r0, r2, r5, r9}
 800006c:	08000225 	stmdaeq	r0, {r0, r2, r5, r9}
 8000070:	08000225 	stmdaeq	r0, {r0, r2, r5, r9}
 8000074:	08000225 	stmdaeq	r0, {r0, r2, r5, r9}
 8000078:	08000225 	stmdaeq	r0, {r0, r2, r5, r9}
 800007c:	08000225 	stmdaeq	r0, {r0, r2, r5, r9}
 8000080:	08000225 	stmdaeq	r0, {r0, r2, r5, r9}
 8000084:	08000225 	stmdaeq	r0, {r0, r2, r5, r9}
 8000088:	08000225 	stmdaeq	r0, {r0, r2, r5, r9}
 800008c:	08000225 	stmdaeq	r0, {r0, r2, r5, r9}
 8000090:	08000225 	stmdaeq	r0, {r0, r2, r5, r9}
 8000094:	08000225 	stmdaeq	r0, {r0, r2, r5, r9}
 8000098:	08000225 	stmdaeq	r0, {r0, r2, r5, r9}
 800009c:	08000225 	stmdaeq	r0, {r0, r2, r5, r9}
 80000a0:	08000225 	stmdaeq	r0, {r0, r2, r5, r9}
 80000a4:	08000225 	stmdaeq	r0, {r0, r2, r5, r9}
 80000a8:	08000225 	stmdaeq	r0, {r0, r2, r5, r9}
 80000ac:	08000225 	stmdaeq	r0, {r0, r2, r5, r9}
 80000b0:	08000225 	stmdaeq	r0, {r0, r2, r5, r9}
 80000b4:	08000225 	stmdaeq	r0, {r0, r2, r5, r9}
 80000b8:	08000225 	stmdaeq	r0, {r0, r2, r5, r9}
 80000bc:	08000225 	stmdaeq	r0, {r0, r2, r5, r9}
 80000c0:	08000225 	stmdaeq	r0, {r0, r2, r5, r9}
 80000c4:	08000225 	stmdaeq	r0, {r0, r2, r5, r9}
 80000c8:	08000225 	stmdaeq	r0, {r0, r2, r5, r9}
 80000cc:	08000225 	stmdaeq	r0, {r0, r2, r5, r9}
 80000d0:	08000225 	stmdaeq	r0, {r0, r2, r5, r9}
 80000d4:	08000225 	stmdaeq	r0, {r0, r2, r5, r9}
 80000d8:	08000225 	stmdaeq	r0, {r0, r2, r5, r9}
 80000dc:	08000225 	stmdaeq	r0, {r0, r2, r5, r9}
 80000e0:	08000225 	stmdaeq	r0, {r0, r2, r5, r9}
 80000e4:	08000225 	stmdaeq	r0, {r0, r2, r5, r9}
 80000e8:	08000225 	stmdaeq	r0, {r0, r2, r5, r9}
 80000ec:	08000225 	stmdaeq	r0, {r0, r2, r5, r9}
 80000f0:	08000225 	stmdaeq	r0, {r0, r2, r5, r9}
 80000f4:	08000225 	stmdaeq	r0, {r0, r2, r5, r9}
 80000f8:	08000225 	stmdaeq	r0, {r0, r2, r5, r9}
 80000fc:	08000225 	stmdaeq	r0, {r0, r2, r5, r9}
 8000100:	08000225 	stmdaeq	r0, {r0, r2, r5, r9}
 8000104:	08000225 	stmdaeq	r0, {r0, r2, r5, r9}
 8000108:	08000225 	stmdaeq	r0, {r0, r2, r5, r9}
 800010c:	08000225 	stmdaeq	r0, {r0, r2, r5, r9}
 8000110:	08000225 	stmdaeq	r0, {r0, r2, r5, r9}
 8000114:	08000225 	stmdaeq	r0, {r0, r2, r5, r9}
 8000118:	08000225 	stmdaeq	r0, {r0, r2, r5, r9}
 800011c:	08000225 	stmdaeq	r0, {r0, r2, r5, r9}
 8000120:	08000225 	stmdaeq	r0, {r0, r2, r5, r9}
 8000124:	08000225 	stmdaeq	r0, {r0, r2, r5, r9}
 8000128:	08000225 	stmdaeq	r0, {r0, r2, r5, r9}
 800012c:	08000225 	stmdaeq	r0, {r0, r2, r5, r9}

08000130 <main>:
#include<stdint.h>


int main(void)
{
 8000130:	b580      	push	{r7, lr}
 8000132:	b084      	sub	sp, #16
 8000134:	af00      	add	r7, sp, #0
        fp=codeaddr;
//	goto *codeaddr;
	fp();	
//	while(1);
*/
	sum();
 8000136:	f000 f887 	bl	8000248 <__sum_veneer>
	while(1);
 800013a:	e7fe      	b.n	800013a <main+0xa>

0800013c <usage_fault_handler>:
}



void usage_fault_handler(){
 800013c:	b480      	push	{r7}
 800013e:	af00      	add	r7, sp, #0

return;
}
 8000140:	46bd      	mov	sp, r7
 8000142:	bc80      	pop	{r7}
 8000144:	4770      	bx	lr
 8000146:	bf00      	nop

08000148 <reset_handler>:
	dma2_channel3_isr,
	dma2_channel4_5_isr,
};
	int i;
void reset_handler(void)
{
 8000148:	b580      	push	{r7, lr}
 800014a:	b084      	sub	sp, #16
 800014c:	af00      	add	r7, sp, #0
	volatile unsigned *src, *dest;
	volatile uint32_t *CCR,*SHCSR;
	i=1;
 800014e:	f240 0304 	movw	r3, #4
 8000152:	f2c2 0300 	movt	r3, #8192	; 0x2000
 8000156:	f04f 0201 	mov.w	r2, #1
 800015a:	601a      	str	r2, [r3, #0]
	while(i);
 800015c:	f240 0304 	movw	r3, #4
 8000160:	f2c2 0300 	movt	r3, #8192	; 0x2000
 8000164:	681b      	ldr	r3, [r3, #0]
 8000166:	2b00      	cmp	r3, #0
 8000168:	d1f8      	bne.n	800015c <reset_handler+0x14>
	CCR=(uint32_t *)0xE000ED14;
 800016a:	f64e 5314 	movw	r3, #60692	; 0xed14
 800016e:	f2ce 0300 	movt	r3, #57344	; 0xe000
 8000172:	60bb      	str	r3, [r7, #8]
	*CCR=16;
 8000174:	68bb      	ldr	r3, [r7, #8]
 8000176:	f04f 0210 	mov.w	r2, #16
 800017a:	601a      	str	r2, [r3, #0]
	SHCSR=(uint32_t *)0xE000ED24;
 800017c:	f64e 5324 	movw	r3, #60708	; 0xed24
 8000180:	f2ce 0300 	movt	r3, #57344	; 0xe000
 8000184:	60fb      	str	r3, [r7, #12]
	*SHCSR=0x70000;
 8000186:	68fb      	ldr	r3, [r7, #12]
 8000188:	f44f 22e0 	mov.w	r2, #458752	; 0x70000
 800018c:	601a      	str	r2, [r3, #0]

	asm("MSR msp, %0" : : "r"(&_stack));
 800018e:	f640 0300 	movw	r3, #2048	; 0x800
 8000192:	f2c2 0300 	movt	r3, #8192	; 0x2000
 8000196:	f383 8808 	msr	MSP, r3

	for (src = &_etext, dest = &_data; dest < &_edata; src++, dest++)
 800019a:	f240 2358 	movw	r3, #600	; 0x258
 800019e:	f6c0 0300 	movt	r3, #2048	; 0x800
 80001a2:	603b      	str	r3, [r7, #0]
 80001a4:	f240 0300 	movw	r3, #0
 80001a8:	f2c2 0300 	movt	r3, #8192	; 0x2000
 80001ac:	607b      	str	r3, [r7, #4]
 80001ae:	e00b      	b.n	80001c8 <reset_handler+0x80>
		*dest = *src;
 80001b0:	683b      	ldr	r3, [r7, #0]
 80001b2:	681a      	ldr	r2, [r3, #0]
 80001b4:	687b      	ldr	r3, [r7, #4]
 80001b6:	601a      	str	r2, [r3, #0]
	SHCSR=(uint32_t *)0xE000ED24;
	*SHCSR=0x70000;

	asm("MSR msp, %0" : : "r"(&_stack));

	for (src = &_etext, dest = &_data; dest < &_edata; src++, dest++)
 80001b8:	683b      	ldr	r3, [r7, #0]
 80001ba:	f103 0304 	add.w	r3, r3, #4
 80001be:	603b      	str	r3, [r7, #0]
 80001c0:	687b      	ldr	r3, [r7, #4]
 80001c2:	f103 0304 	add.w	r3, r3, #4
 80001c6:	607b      	str	r3, [r7, #4]
 80001c8:	f240 0300 	movw	r3, #0
 80001cc:	f2c2 0300 	movt	r3, #8192	; 0x2000
 80001d0:	687a      	ldr	r2, [r7, #4]
 80001d2:	429a      	cmp	r2, r3
 80001d4:	d3ec      	bcc.n	80001b0 <reset_handler+0x68>
		*dest = *src;

	while (dest < &_ebss)
 80001d6:	e007      	b.n	80001e8 <reset_handler+0xa0>
		*dest++ = 0;
 80001d8:	687b      	ldr	r3, [r7, #4]
 80001da:	f04f 0200 	mov.w	r2, #0
 80001de:	601a      	str	r2, [r3, #0]
 80001e0:	687b      	ldr	r3, [r7, #4]
 80001e2:	f103 0304 	add.w	r3, r3, #4
 80001e6:	607b      	str	r3, [r7, #4]
	asm("MSR msp, %0" : : "r"(&_stack));

	for (src = &_etext, dest = &_data; dest < &_edata; src++, dest++)
		*dest = *src;

	while (dest < &_ebss)
 80001e8:	f240 0308 	movw	r3, #8
 80001ec:	f2c2 0300 	movt	r3, #8192	; 0x2000
 80001f0:	687a      	ldr	r2, [r7, #4]
 80001f2:	429a      	cmp	r2, r3
 80001f4:	d3f0      	bcc.n	80001d8 <reset_handler+0x90>
		*dest++ = 0;
	
	/* Call the application's entry point. */
	main();
 80001f6:	f7ff ff9b 	bl	8000130 <main>
}
 80001fa:	f107 0710 	add.w	r7, r7, #16
 80001fe:	46bd      	mov	sp, r7
 8000200:	bd80      	pop	{r7, pc}
 8000202:	bf00      	nop

08000204 <blocking_handler>:

	void **HARDFAULT_PSP;
	register void *stack_pointer asm("sp");

void blocking_handler(void)
{
 8000204:	b480      	push	{r7}
 8000206:	af00      	add	r7, sp, #0
	// Hijack the process stack pointer to make backtrace work
    asm("mrs %0, psp" : "=r"(HARDFAULT_PSP));
 8000208:	f3ef 8209 	mrs	r2, PSP
 800020c:	f240 0300 	movw	r3, #0
 8000210:	f2c2 0300 	movt	r3, #8192	; 0x2000
 8000214:	601a      	str	r2, [r3, #0]
    stack_pointer = HARDFAULT_PSP;
 8000216:	f240 0300 	movw	r3, #0
 800021a:	f2c2 0300 	movt	r3, #8192	; 0x2000
 800021e:	681b      	ldr	r3, [r3, #0]
 8000220:	469d      	mov	sp, r3
    while(1);
 8000222:	e7fe      	b.n	8000222 <blocking_handler+0x1e>

08000224 <null_handler>:
}
void null_handler(void)
{
 8000224:	b480      	push	{r7}
 8000226:	af00      	add	r7, sp, #0
	/* Do nothing. */
}
 8000228:	46bd      	mov	sp, r7
 800022a:	bc80      	pop	{r7}
 800022c:	4770      	bx	lr
 800022e:	bf00      	nop

08000230 <hard_fault_handler>:

void hard_fault_handler(void)
{
 8000230:	b480      	push	{r7}
 8000232:	af00      	add	r7, sp, #0
	/* Do nothing. */
}
 8000234:	46bd      	mov	sp, r7
 8000236:	bc80      	pop	{r7}
 8000238:	4770      	bx	lr
 800023a:	bf00      	nop

0800023c <mem_manage_handler>:

void mem_manage_handler(void)
{
 800023c:	b480      	push	{r7}
 800023e:	af00      	add	r7, sp, #0
	/* Do nothing. */
}
 8000240:	46bd      	mov	sp, r7
 8000242:	bc80      	pop	{r7}
 8000244:	4770      	bx	lr
 8000246:	bf00      	nop

08000248 <__sum_veneer>:
 8000248:	b401      	push	{r0}
 800024a:	4802      	ldr	r0, [pc, #8]	; (8000254 <__sum_veneer+0xc>)
 800024c:	4684      	mov	ip, r0
 800024e:	bc01      	pop	{r0}
 8000250:	4760      	bx	ip
 8000252:	bf00      	nop
 8000254:	c0000001 	andgt	r0, r0, r1

Disassembly of section .nxtext:

c0000000 <sum>:
__attribute__((section(".sum")))
//sumfunstart=.;
int sum()
{
c0000000:	b480      	push	{r7}
c0000002:	af00      	add	r7, sp, #0
return 2+1;
c0000004:	f04f 0303 	mov.w	r3, #3
}
c0000008:	4618      	mov	r0, r3
c000000a:	46bd      	mov	sp, r7
c000000c:	bc80      	pop	{r7}
c000000e:	4770      	bx	lr

Disassembly of section .bss:

20000000 <HARDFAULT_PSP>:
20000000:	00000000 	andeq	r0, r0, r0

20000004 <i>:
20000004:	00000000 	andeq	r0, r0, r0

Disassembly of section .debug_abbrev:

00000000 <.debug_abbrev>:
   0:	25011101 	strcs	r1, [r1, #-257]	; 0x101
   4:	030b130e 	movweq	r1, #45838	; 0xb30e
   8:	110e1b0e 	tstne	lr, lr, lsl #22
   c:	10011201 	andne	r1, r1, r1, lsl #4
  10:	02000006 	andeq	r0, r0, #6
  14:	0b0b0024 	bleq	2c00ac <vector_table-0x7d3ff54>
  18:	0e030b3e 	vmoveq.16	d3[0], r0
  1c:	24030000 	strcs	r0, [r3], #-0
  20:	3e0b0b00 	vmlacc.f64	d0, d11, d0
  24:	0008030b 	andeq	r0, r8, fp, lsl #6
  28:	012e0400 	teqeq	lr, r0, lsl #8
  2c:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
  30:	0b3b0b3a 	bleq	ec2d20 <vector_table-0x713d2e0>
  34:	13490c27 	movtne	r0, #39975	; 0x9c27
  38:	01120111 	tsteq	r2, r1, lsl r1
  3c:	13010640 	movwne	r0, #5696	; 0x1640
  40:	34050000 	strcc	r0, [r5], #-0
  44:	3a0e0300 	bcc	380c4c <vector_table-0x7c7f3b4>
  48:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
  4c:	000a0213 	andeq	r0, sl, r3, lsl r2
  50:	00340600 	eorseq	r0, r4, r0, lsl #12
  54:	0b3a0803 	bleq	e82068 <vector_table-0x717df98>
  58:	13490b3b 	movtne	r0, #39739	; 0x9b3b
  5c:	00000a02 	andeq	r0, r0, r2, lsl #20
  60:	0b000f07 	bleq	3c84 <vector_table-0x7ffc37c>
  64:	0013490b 	andseq	r4, r3, fp, lsl #18
  68:	002e0800 	eoreq	r0, lr, r0, lsl #16
  6c:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
  70:	0b3b0b3a 	bleq	ec2d60 <vector_table-0x713d2a0>
  74:	01120111 	tsteq	r2, r1, lsl r1
  78:	00000640 	andeq	r0, r0, r0, asr #12
  7c:	01110100 	tsteq	r1, r0, lsl #2
  80:	0b130e25 	bleq	4c391c <vector_table-0x7b3c6e4>
  84:	0e1b0e03 	cdpeq	14, 1, cr0, cr11, cr3, {0}
  88:	01120111 	tsteq	r2, r1, lsl r1
  8c:	00000610 	andeq	r0, r0, r0, lsl r6
  90:	0b002402 	bleq	90a0 <vector_table-0x7ff6f60>
  94:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
  98:	0300000e 	movweq	r0, #14
  9c:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
  a0:	0b3b0b3a 	bleq	ec2d90 <vector_table-0x713d270>
  a4:	00001349 	andeq	r1, r0, r9, asr #6
  a8:	0b002404 	bleq	90c0 <vector_table-0x7ff6f40>
  ac:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
  b0:	05000008 	streq	r0, [r0, #-8]
  b4:	0c3f012e 	ldfeqs	f0, [pc], #-184	; 4 <vector_table-0x7fffffc>
  b8:	0b3a0e03 	bleq	e838cc <vector_table-0x717c734>
  bc:	0c270b3b 	stceq	11, cr0, [r7], #-236	; 0xffffff14
  c0:	01120111 	tsteq	r2, r1, lsl r1
  c4:	13010640 	movwne	r0, #5696	; 0x1640
  c8:	34060000 	strcc	r0, [r6], #-0
  cc:	3a080300 	bcc	200cd4 <vector_table-0x7dff32c>
  d0:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
  d4:	000a0213 	andeq	r0, sl, r3, lsl r2
  d8:	00340700 	eorseq	r0, r4, r0, lsl #14
  dc:	0b3a0e03 	bleq	e838f0 <vector_table-0x717c710>
  e0:	13490b3b 	movtne	r0, #39739	; 0x9b3b
  e4:	00000a02 	andeq	r0, r0, r2, lsl #20
  e8:	0b000f08 	bleq	3d10 <vector_table-0x7ffc2f0>
  ec:	0013490b 	andseq	r4, r3, fp, lsl #18
  f0:	00350900 	eorseq	r0, r5, r0, lsl #18
  f4:	00001349 	andeq	r1, r0, r9, asr #6
  f8:	3f002e0a 	svccc	0x00002e0a
  fc:	3a0e030c 	bcc	380d34 <vector_table-0x7c7f2cc>
 100:	270b3b0b 	strcs	r3, [fp, -fp, lsl #22]
 104:	1201110c 	andne	r1, r1, #12, 2
 108:	00064001 	andeq	r4, r6, r1
 10c:	00340b00 	eorseq	r0, r4, r0, lsl #22
 110:	0b3a0e03 	bleq	e83924 <vector_table-0x717c6dc>
 114:	13490b3b 	movtne	r0, #39739	; 0x9b3b
 118:	0c3c0c3f 	ldceq	12, cr0, [ip], #-252	; 0xffffff04
 11c:	010c0000 	tsteq	ip, r0
 120:	01134901 	tsteq	r3, r1, lsl #18
 124:	0d000013 	stceq	0, cr0, [r0, #-76]	; 0xffffffb4
 128:	13490021 	movtne	r0, #36897	; 0x9021
 12c:	00000b2f 	andeq	r0, r0, pc, lsr #22
 130:	0b00240e 	bleq	9170 <vector_table-0x7ff6e90>
 134:	000b3e0b 	andeq	r3, fp, fp, lsl #28
 138:	00150f00 	andseq	r0, r5, r0, lsl #30
 13c:	00000c27 	andeq	r0, r0, r7, lsr #24
 140:	03003410 	movweq	r3, #1040	; 0x410
 144:	3b0b3a0e 	blcc	2ce984 <vector_table-0x7d3167c>
 148:	3f13490b 	svccc	0x0013490b
 14c:	000a020c 	andeq	r0, sl, ip, lsl #4
 150:	00261100 	eoreq	r1, r6, r0, lsl #2
 154:	00001349 	andeq	r1, r0, r9, asr #6
 158:	03003412 	movweq	r3, #1042	; 0x412
 15c:	3b0b3a08 	blcc	2ce984 <vector_table-0x7d3167c>
 160:	3f13490b 	svccc	0x0013490b
 164:	000a020c 	andeq	r0, sl, ip, lsl #4
 168:	000f1300 	andeq	r1, pc, r0, lsl #6
 16c:	00000b0b 	andeq	r0, r0, fp, lsl #22
 170:	01110100 	tsteq	r1, r0, lsl #2
 174:	0b130e25 	bleq	4c3a10 <vector_table-0x7b3c5f0>
 178:	0e1b0e03 	cdpeq	14, 1, cr0, cr11, cr3, {0}
 17c:	01520111 	cmpeq	r2, r1, lsl r1
 180:	06100655 	undefined instruction 0x06100655
 184:	2e020000 	cdpcs	0, 0, cr0, cr2, cr0, {0}
 188:	030c3f00 	movweq	r3, #52992	; 0xcf00
 18c:	3b0b3a08 	blcc	2ce9b4 <vector_table-0x7d3164c>
 190:	1113490b 	tstne	r3, fp, lsl #18
 194:	40011201 	andmi	r1, r1, r1, lsl #4
 198:	03000006 	movweq	r0, #6
 19c:	0b0b0024 	bleq	2c0234 <vector_table-0x7d3fdcc>
 1a0:	08030b3e 	stmdaeq	r3, {r1, r2, r3, r4, r5, r8, r9, fp}
 1a4:	Address 0x000001a4 is out of bounds.


Disassembly of section .debug_info:

00000000 <.debug_info>:
   0:	000000ca 	andeq	r0, r0, sl, asr #1
   4:	00000002 	andeq	r0, r0, r2
   8:	01040000 	tsteq	r4, r0
   c:	00000031 	andeq	r0, r0, r1, lsr r0
  10:	00001301 	andeq	r1, r0, r1, lsl #6
  14:	00008000 	andeq	r8, r0, r0
  18:	00013000 	andeq	r3, r1, r0
  1c:	00014608 	andeq	r4, r1, r8, lsl #12
  20:	00000008 	andeq	r0, r0, r8
  24:	06010200 	streq	r0, [r1], -r0, lsl #4
  28:	0000003f 	andeq	r0, r0, pc, lsr r0
  2c:	3d080102 	stfccs	f0, [r8, #-8]
  30:	02000000 	andeq	r0, r0, #0
  34:	00ac0502 	adceq	r0, ip, r2, lsl #10
  38:	02020000 	andeq	r0, r2, #0
  3c:	00006d07 	andeq	r6, r0, r7, lsl #26
  40:	05040200 	streq	r0, [r4, #-512]	; 0x200
  44:	00000005 	andeq	r0, r0, r5
  48:	1f070402 	svcne	0x00070402
  4c:	02000000 	andeq	r0, r0, #0
  50:	00000508 	andeq	r0, r0, r8, lsl #10
  54:	08020000 	stmdaeq	r2, {}
  58:	00001a07 	andeq	r1, r0, r7, lsl #20
  5c:	05040300 	streq	r0, [r4, #-768]	; 0x300
  60:	00746e69 	rsbseq	r6, r4, r9, ror #28
  64:	24070402 	strcs	r0, [r7], #-1026	; 0x402
  68:	04000000 	streq	r0, [r0], #-0
  6c:	00005401 	andeq	r5, r0, r1, lsl #8
  70:	01040100 	tsteq	r4, r0, lsl #2
  74:	0000005d 	andeq	r0, r0, sp, asr r0
  78:	08000130 	stmdaeq	r0, {r4, r5, r8}
  7c:	0800013c 	stmdaeq	r0, {r2, r3, r4, r5, r8}
  80:	00000000 	andeq	r0, r0, r0
  84:	000000b3 	strheq	r0, [r0], -r3
  88:	00004b05 	andeq	r4, r0, r5, lsl #22
  8c:	b3070100 	movwlt	r0, #28928	; 0x7100
  90:	02000000 	andeq	r0, r0, #0
  94:	73066c91 	movwvc	r6, #27793	; 0x6c91
  98:	01006372 	tsteq	r0, r2, ror r3
  9c:	0000b307 	andeq	fp, r0, r7, lsl #6
  a0:	70910200 	addsvc	r0, r1, r0, lsl #4
  a4:	00000e05 	andeq	r0, r0, r5, lsl #28
  a8:	b3070100 	movwlt	r0, #28928	; 0x7100
  ac:	02000000 	andeq	r0, r0, #0
  b0:	07007491 	undefined instruction 0x07007491
  b4:	00005d04 	andeq	r5, r0, r4, lsl #26
  b8:	59010800 	stmdbpl	r1, {fp}
  bc:	01000000 	tsteq	r0, r0
  c0:	00013c1e 	andeq	r3, r1, lr, lsl ip
  c4:	00014608 	andeq	r4, r1, r8, lsl #12
  c8:	00003708 	andeq	r3, r0, r8, lsl #14
  cc:	01da0000 	bicseq	r0, sl, r0
  d0:	00020000 	andeq	r0, r2, r0
  d4:	0000007d 	andeq	r0, r0, sp, ror r0
  d8:	00310104 	eorseq	r0, r1, r4, lsl #2
  dc:	48010000 	stmdami	r1, {}
  e0:	80000001 	andhi	r0, r0, r1
  e4:	48000000 	stmdami	r0, {}
  e8:	46080001 	strmi	r0, [r8], -r1
  ec:	3a080002 	bcc	2000fc <vector_table-0x7dfff04>
  f0:	02000000 	andeq	r0, r0, #0
  f4:	003f0601 	eorseq	r0, pc, r1, lsl #12
  f8:	01020000 	tsteq	r2, r0
  fc:	00003d08 	andeq	r3, r0, r8, lsl #26
 100:	05020200 	streq	r0, [r2, #-512]	; 0x200
 104:	000000ac 	andeq	r0, r0, ip, lsr #1
 108:	6d070202 	sfmvs	f0, 4, [r7, #-8]
 10c:	02000000 	andeq	r0, r0, #0
 110:	00050504 	andeq	r0, r5, r4, lsl #10
 114:	02030000 	andeq	r0, r3, #0
 118:	02000001 	andeq	r0, r0, #1
 11c:	00005350 	andeq	r5, r0, r0, asr r3
 120:	07040200 	streq	r0, [r4, -r0, lsl #4]
 124:	0000001f 	andeq	r0, r0, pc, lsl r0
 128:	00050802 	andeq	r0, r5, r2, lsl #16
 12c:	02000000 	andeq	r0, r0, #0
 130:	001a0708 	andseq	r0, sl, r8, lsl #14
 134:	04040000 	streq	r0, [r4], #-0
 138:	746e6905 	strbtvc	r6, [lr], #-2309	; 0x905
 13c:	07040200 	streq	r0, [r4, -r0, lsl #4]
 140:	00000024 	andeq	r0, r0, r4, lsr #32
 144:	01270105 	teqeq	r7, r5, lsl #2
 148:	9f010000 	svcls	0x00010000
 14c:	00014801 	andeq	r4, r1, r1, lsl #16
 150:	00020208 	andeq	r0, r2, r8, lsl #4
 154:	00006208 	andeq	r6, r0, r8, lsl #4
 158:	0000c800 	andeq	ip, r0, r0, lsl #16
 15c:	72730600 	rsbsvc	r0, r3, #0, 12
 160:	a1010063 	tstge	r1, r3, rrx
 164:	000000c8 	andeq	r0, r0, r8, asr #1
 168:	07689102 	strbeq	r9, [r8, -r2, lsl #2]!
 16c:	0000000e 	andeq	r0, r0, lr
 170:	00c8a101 	sbceq	sl, r8, r1, lsl #2
 174:	91020000 	tstls	r2, r0
 178:	4343066c 	movtmi	r0, #13932	; 0x366c
 17c:	a2010052 	andge	r0, r1, #82	; 0x52
 180:	000000d3 	ldrdeq	r0, [r0], -r3
 184:	07709102 	ldrbeq	r9, [r0, -r2, lsl #2]!
 188:	000000bc 	strheq	r0, [r0], -ip
 18c:	00d3a201 	sbcseq	sl, r3, r1, lsl #4
 190:	91020000 	tstls	r2, r0
 194:	04080074 	streq	r0, [r8], #-116	; 0x74
 198:	000000ce 	andeq	r0, r0, lr, asr #1
 19c:	00006f09 	andeq	r6, r0, r9, lsl #30
 1a0:	d9040800 	stmdble	r4, {fp}
 1a4:	09000000 	stmdbeq	r0, {}
 1a8:	00000048 	andeq	r0, r0, r8, asr #32
 1ac:	00f1010a 	rscseq	r0, r1, sl, lsl #2
 1b0:	b9010000 	stmdblt	r1, {}
 1b4:	00020401 	andeq	r0, r2, r1, lsl #8
 1b8:	00022408 	andeq	r2, r2, r8, lsl #8
 1bc:	00009908 	andeq	r9, r0, r8, lsl #18
 1c0:	dd010a00 	vstrle	s0, [r1, #-0]
 1c4:	01000000 	tsteq	r0, r0
 1c8:	022401c0 	eoreq	r0, r4, #192, 2	; 0x30
 1cc:	022e0800 	eoreq	r0, lr, #0, 16
 1d0:	00c40800 	sbceq	r0, r4, r0, lsl #16
 1d4:	010a0000 	tsteq	sl, r0
 1d8:	00000135 	andeq	r0, r0, r5, lsr r1
 1dc:	3001c501 	andcc	ip, r1, r1, lsl #10
 1e0:	3a080002 	bcc	2001f0 <vector_table-0x7dffe10>
 1e4:	ef080002 	svc	0x00080002
 1e8:	0a000000 	beq	1f0 <vector_table-0x7fffe10>
 1ec:	00015701 	andeq	r5, r1, r1, lsl #14
 1f0:	01ca0100 	biceq	r0, sl, r0, lsl #2
 1f4:	0800023c 	stmdaeq	r0, {r2, r3, r4, r5, r9}
 1f8:	08000246 	stmdaeq	r0, {r1, r2, r6, r9}
 1fc:	0000011a 	andeq	r0, r0, sl, lsl r1
 200:	0001200b 	andeq	r2, r1, fp
 204:	6f040100 	svcvs	0x00040100
 208:	01000000 	tsteq	r0, r0
 20c:	01510b01 	cmpeq	r1, r1, lsl #22
 210:	04010000 	streq	r0, [r1], #-0
 214:	0000006f 	andeq	r0, r0, pc, rrx
 218:	ea0b0101 	b	2c0624 <vector_table-0x7d3f9dc>
 21c:	01000000 	tsteq	r0, r0
 220:	00006f04 	andeq	r6, r0, r4, lsl #30
 224:	0b010100 	bleq	4062c <vector_table-0x7fbf9d4>
 228:	000000b6 	strheq	r0, [r0], -r6
 22c:	006f0401 	rsbeq	r0, pc, r1, lsl #8
 230:	01010000 	tsteq	r1, r0
 234:	00010b0b 	andeq	r0, r1, fp, lsl #22
 238:	6f040100 	svcvs	0x00040100
 23c:	01000000 	tsteq	r0, r0
 240:	01880c01 	orreq	r0, r8, r1, lsl #24
 244:	01830000 	orreq	r0, r3, r0
 248:	830d0000 	movwhi	r0, #53248	; 0xd000
 24c:	4b000001 	blmi	258 <vector_table-0x7fffda8>
 250:	07040e00 	streq	r0, [r4, -r0, lsl #28]
 254:	0408010f 	streq	r0, [r8], #-271	; 0x10f
 258:	00000186 	andeq	r0, r0, r6, lsl #3
 25c:	0000d010 	andeq	sp, r0, r0, lsl r0
 260:	a0530100 	subsge	r0, r3, r0, lsl #2
 264:	01000001 	tsteq	r0, r1
 268:	00000305 	andeq	r0, r0, r5, lsl #6
 26c:	73110800 	tstvc	r1, #0, 16
 270:	12000001 	andne	r0, r0, #1
 274:	9e010069 	cdpls	0, 0, cr0, cr1, cr9, {3}
 278:	00000068 	andeq	r0, r0, r8, rrx
 27c:	04030501 	streq	r0, [r3], #-1281	; 0x501
 280:	10200000 	eorne	r0, r0, r0
 284:	00000112 	andeq	r0, r0, r2, lsl r1
 288:	01c7b601 	biceq	fp, r7, r1, lsl #12
 28c:	05010000 	streq	r0, [r1, #-0]
 290:	00000003 	andeq	r0, r0, r3
 294:	cd040820 	stcgt	8, cr0, [r4, #-128]	; 0xffffff80
 298:	13000001 	movwne	r0, #1
 29c:	00c21004 	sbceq	r1, r2, r4
 2a0:	b7010000 	strlt	r0, [r1, -r0]
 2a4:	000001cd 	andeq	r0, r0, sp, asr #3
 2a8:	005d0101 	subseq	r0, sp, r1, lsl #2
 2ac:	00000045 	andeq	r0, r0, r5, asr #32
 2b0:	01710002 	cmneq	r1, r2
 2b4:	01040000 	tsteq	r4, r0
 2b8:	00000031 	andeq	r0, r0, r1, lsr r0
 2bc:	00016a01 	andeq	r6, r1, r1, lsl #20
 2c0:	00008000 	andeq	r8, r0, r0
	...
 2d0:	00011200 	andeq	r1, r1, r0, lsl #4
 2d4:	73010200 	movwvc	r0, #4608	; 0x1200
 2d8:	01006d75 	tsteq	r0, r5, ror sp
 2dc:	00004103 	andeq	r4, r0, r3, lsl #2
 2e0:	00000000 	andeq	r0, r0, r0
 2e4:	000010c0 	andeq	r1, r0, r0, asr #1
 2e8:	000145c0 	andeq	r4, r1, r0, asr #11
 2ec:	05040300 	streq	r0, [r4, #-768]	; 0x300
 2f0:	00746e69 	rsbseq	r6, r4, r9, ror #28
	...

Disassembly of section .debug_line:

00000000 <.debug_line>:
   0:	00000036 	andeq	r0, r0, r6, lsr r0
   4:	001d0002 	andseq	r0, sp, r2
   8:	01020000 	tsteq	r2, r0
   c:	000d0efb 	strdeq	r0, [sp], -fp
  10:	01010101 	tsteq	r1, r1, lsl #2
  14:	01000000 	tsteq	r0, r0
  18:	00010000 	andeq	r0, r1, r0
  1c:	6e69616d 	powvsez	f6, f1, #5.0
  20:	0000632e 	andeq	r6, r0, lr, lsr #6
  24:	00000000 	andeq	r0, r0, r0
  28:	01300205 	teqeq	r0, r5, lsl #4
  2c:	03160800 	tsteq	r6, #0, 16
  30:	252f3c13 	strcs	r3, [pc, #-3091]!	; fffff425 <sum+0x3ffff425>
  34:	00030231 	andeq	r0, r3, r1, lsr r2
  38:	00d40101 	sbcseq	r0, r4, r1, lsl #2
  3c:	00020000 	andeq	r0, r2, r0
  40:	000000a5 	andeq	r0, r0, r5, lsr #1
  44:	0efb0102 	cdpeq	1, 15, cr0, cr11, cr2, {0}
  48:	0101000d 	tsteq	r1, sp
  4c:	00000101 	andeq	r0, r0, r1, lsl #2
  50:	00000100 	andeq	r0, r0, r0, lsl #2
  54:	6f682f01 	svcvs	0x00682f01
  58:	732f656d 	teqvc	pc, #457179136	; 0x1b400000
  5c:	6c696e75 	stclvs	14, cr6, [r9], #-468	; 0xfffffe2c
  60:	636f442f 	cmnvs	pc, #788529152	; 0x2f000000
  64:	6e656d75 	mcrvs	13, 3, r6, cr5, cr5, {3}
  68:	432f7374 	teqmi	pc, #116, 6	; 0xd0000001
  6c:	5365646f 	cmnpl	r5, #1862270976	; 0x6f000000
  70:	6372756f 	cmnvs	r2, #465567744	; 0x1bc00000
  74:	2f797265 	svccs	0x00797265
  78:	72756f53 	rsbsvc	r6, r5, #332	; 0x14c
  7c:	79726563 	ldmdbvc	r2!, {r0, r1, r5, r6, r8, sl, sp, lr}^
  80:	2b2b475f 	blcs	ad1e04 <vector_table-0x752e1fc>
  84:	74694c5f 	strbtvc	r4, [r9], #-3167	; 0xc5f
  88:	69622f65 	stmdbvs	r2!, {r0, r2, r5, r6, r8, r9, sl, fp, sp}^
  8c:	2e2e2f6e 	cdpcs	15, 2, cr2, cr14, cr14, {3}
  90:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
  94:	6363672f 	cmnvs	r3, #12320768	; 0xbc0000
  98:	6d72612f 	ldfvse	f6, [r2, #-188]!	; 0xffffff44
  9c:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
  a0:	61652d65 	cmnvs	r5, r5, ror #26
  a4:	342f6962 	strtcc	r6, [pc], #2402	; ac <vector_table-0x7ffff54>
  a8:	312e342e 	teqcc	lr, lr, lsr #8
  ac:	2f2e2e2f 	svccs	0x002e2e2f
  b0:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
  b4:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
  b8:	6d72612f 	ldfvse	f6, [r2, #-188]!	; 0xffffff44
  bc:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
  c0:	61652d65 	cmnvs	r5, r5, ror #26
  c4:	692f6962 	stmdbvs	pc!, {r1, r5, r6, r8, fp, sp, lr}
  c8:	756c636e 	strbvc	r6, [ip, #-878]!	; 0x36e
  cc:	00006564 	andeq	r6, r0, r4, ror #10
  d0:	74636576 	strbtvc	r6, [r3], #-1398	; 0x576
  d4:	632e726f 	teqvs	lr, #-268435450	; 0xf0000006
  d8:	00000000 	andeq	r0, r0, r0
  dc:	69647473 	stmdbvs	r4!, {r0, r1, r4, r5, r6, sl, ip, sp, lr}^
  e0:	682e746e 	stmdavs	lr!, {r1, r2, r3, r5, r6, sl, ip, sp, lr}
  e4:	00000100 	andeq	r0, r0, r0, lsl #2
  e8:	02050000 	andeq	r0, r5, #0
  ec:	08000148 	stmdaeq	r0, {r3, r6, r8}
  f0:	01019f03 	tsteq	r1, r3, lsl #30
  f4:	5975753f 	ldmdbpl	r5!, {r0, r1, r2, r3, r4, r5, r8, sl, ip, sp, lr}^
  f8:	684c594b 	stmdavs	ip, {r0, r1, r3, r6, r8, fp, ip, lr}^
  fc:	21e749ad 	mvncs	r4, sp, lsr #19
 100:	5e2f7881 	cdppl	8, 2, cr7, cr15, cr1, {4}
 104:	23677530 	cmncs	r7, #48, 10	; 0xc000000
 108:	4d304d30 	ldcmi	13, cr4, [r0, #-192]!	; 0xffffff40
 10c:	00030230 	andeq	r0, r3, r0, lsr r2
 110:	00310101 	eorseq	r0, r1, r1, lsl #2
 114:	00020000 	andeq	r0, r2, r0
 118:	0000001c 	andeq	r0, r0, ip, lsl r0
 11c:	0efb0102 	cdpeq	1, 15, cr0, cr11, cr2, {0}
 120:	0101000d 	tsteq	r1, sp
 124:	00000101 	andeq	r0, r0, r1, lsl #2
 128:	00000100 	andeq	r0, r0, r0, lsl #2
 12c:	75730001 	ldrbvc	r0, [r3, #-1]!
 130:	00632e6d 	rsbeq	r2, r3, sp, ror #28
 134:	00000000 	andeq	r0, r0, r0
 138:	00020500 	andeq	r0, r2, r0, lsl #10
 13c:	15c00000 	strbne	r0, [r0]
 140:	04022f2f 	streq	r2, [r2], #-3887	; 0xf2f
 144:	Address 0x00000144 is out of bounds.


Disassembly of section .debug_loc:

00000000 <.debug_loc>:
   0:	00000000 	andeq	r0, r0, r0
   4:	00000002 	andeq	r0, r0, r2
   8:	025d0001 	subseq	r0, sp, #1
   c:	04000000 	streq	r0, [r0], #-0
  10:	02000000 	andeq	r0, r0, #0
  14:	04087d00 	streq	r7, [r8], #-3328	; 0xd00
  18:	06000000 	streq	r0, [r0], -r0
  1c:	02000000 	andeq	r0, r0, #0
  20:	06187d00 	ldreq	r7, [r8], -r0, lsl #26
  24:	0c000000 	stceq	0, cr0, [r0], {-0}
  28:	02000000 	andeq	r0, r0, #0
  2c:	00187700 	andseq	r7, r8, r0, lsl #14
  30:	00000000 	andeq	r0, r0, r0
  34:	0c000000 	stceq	0, cr0, [r0], {-0}
  38:	0e000000 	cdpeq	0, 0, cr0, cr0, cr0, {0}
  3c:	01000000 	tsteq	r0, r0
  40:	000e5d00 	andeq	r5, lr, r0, lsl #26
  44:	00100000 	andseq	r0, r0, r0
  48:	00020000 	andeq	r0, r2, r0
  4c:	0010047d 	andseq	r0, r0, sp, ror r4
  50:	00160000 	andseq	r0, r6, r0
  54:	00020000 	andeq	r0, r2, r0
  58:	00000477 	andeq	r0, r0, r7, ror r4
	...
  64:	00020000 	andeq	r0, r2, r0
  68:	00010000 	andeq	r0, r1, r0
  6c:	0000025d 	andeq	r0, r0, sp, asr r2
  70:	00000400 	andeq	r0, r0, r0, lsl #8
  74:	7d000200 	sfmvc	f0, 4, [r0, #-0]
  78:	00000408 	andeq	r0, r0, r8, lsl #8
  7c:	00000600 	andeq	r0, r0, r0, lsl #12
  80:	7d000200 	sfmvc	f0, 4, [r0, #-0]
  84:	00000618 	andeq	r0, r0, r8, lsl r6
  88:	0000ba00 	andeq	fp, r0, r0, lsl #20
  8c:	77000200 	strvc	r0, [r0, -r0, lsl #4]
  90:	00000018 	andeq	r0, r0, r8, lsl r0
  94:	00000000 	andeq	r0, r0, r0
  98:	0000bc00 	andeq	fp, r0, r0, lsl #24
  9c:	0000be00 	andeq	fp, r0, r0, lsl #28
  a0:	5d000100 	stfpls	f0, [r0, #-0]
  a4:	000000be 	strheq	r0, [r0], -lr
  a8:	000000c0 	andeq	r0, r0, r0, asr #1
  ac:	047d0002 	ldrbteq	r0, [sp], #-2
  b0:	000000c0 	andeq	r0, r0, r0, asr #1
  b4:	000000dc 	ldrdeq	r0, [r0], -ip
  b8:	04770002 	ldrbteq	r0, [r7], #-2
	...
  c4:	000000dc 	ldrdeq	r0, [r0], -ip
  c8:	000000de 	ldrdeq	r0, [r0], -lr
  cc:	de5d0001 	cdple	0, 5, cr0, cr13, cr1, {0}
  d0:	e0000000 	and	r0, r0, r0
  d4:	02000000 	andeq	r0, r0, #0
  d8:	e0047d00 	and	r7, r4, r0, lsl #26
  dc:	e6000000 	str	r0, [r0], -r0
  e0:	02000000 	andeq	r0, r0, #0
  e4:	00047700 	andeq	r7, r4, r0, lsl #14
  e8:	00000000 	andeq	r0, r0, r0
  ec:	e8000000 	stmda	r0, {}
  f0:	ea000000 	b	f8 <vector_table-0x7ffff08>
  f4:	01000000 	tsteq	r0, r0
  f8:	00ea5d00 	rsceq	r5, sl, r0, lsl #26
  fc:	00ec0000 	rsceq	r0, ip, r0
 100:	00020000 	andeq	r0, r2, r0
 104:	00ec047d 	rsceq	r0, ip, sp, ror r4
 108:	00f20000 	rscseq	r0, r2, r0
 10c:	00020000 	andeq	r0, r2, r0
 110:	00000477 	andeq	r0, r0, r7, ror r4
 114:	00000000 	andeq	r0, r0, r0
 118:	00f40000 	rscseq	r0, r4, r0
 11c:	00f60000 	rscseq	r0, r6, r0
 120:	00010000 	andeq	r0, r1, r0
 124:	0000f65d 	andeq	pc, r0, sp, asr r6
 128:	0000f800 	andeq	pc, r0, r0, lsl #16
 12c:	7d000200 	sfmvc	f0, 4, [r0, #-0]
 130:	0000f804 	andeq	pc, r0, r4, lsl #16
 134:	0000fe00 	andeq	pc, r0, r0, lsl #28
 138:	77000200 	strvc	r0, [r0, -r0, lsl #4]
 13c:	00000004 	andeq	r0, r0, r4
	...
 148:	000002c0 	andeq	r0, r0, r0, asr #5
 14c:	5d0001c0 	stfpls	f0, [r0, #-768]	; 0xfffffd00
 150:	c0000002 	andgt	r0, r0, r2
 154:	c0000004 	andgt	r0, r0, r4
 158:	047d0002 	ldrbteq	r0, [sp], #-2
 15c:	c0000004 	andgt	r0, r0, r4
 160:	c0000010 	andgt	r0, r0, r0, lsl r0
 164:	04770002 	ldrbteq	r0, [r7], #-2
	...

Disassembly of section .debug_pubnames:

00000000 <.debug_pubnames>:
   0:	0000002f 	andeq	r0, r0, pc, lsr #32
   4:	00000002 	andeq	r0, r0, r2
   8:	00ce0000 	sbceq	r0, lr, r0
   c:	006b0000 	rsbeq	r0, fp, r0
  10:	616d0000 	cmnvs	sp, r0
  14:	b9006e69 	stmdblt	r0, {r0, r3, r5, r6, r9, sl, fp, sp, lr}
  18:	75000000 	strvc	r0, [r0, #-0]
  1c:	65676173 	strbvs	r6, [r7, #-371]!	; 0x173
  20:	7561665f 	strbvc	r6, [r1, #-1631]!	; 0x65f
  24:	685f746c 	ldmdavs	pc, {r2, r3, r5, r6, sl, ip, sp, lr}^
  28:	6c646e61 	stclvs	14, cr6, [r4], #-388	; 0xfffffe7c
  2c:	00007265 	andeq	r7, r0, r5, ror #4
  30:	af000000 	svcge	0x00000000
  34:	02000000 	andeq	r0, r0, #0
  38:	0000ce00 	andeq	ip, r0, r0, lsl #28
  3c:	0001de00 	andeq	sp, r1, r0, lsl #28
  40:	00007600 	andeq	r7, r0, r0, lsl #12
  44:	73657200 	cmnvc	r5, #0, 4
  48:	685f7465 	ldmdavs	pc, {r0, r2, r5, r6, sl, ip, sp, lr}^
  4c:	6c646e61 	stclvs	14, cr6, [r4], #-388	; 0xfffffe7c
  50:	de007265 	cdple	2, 0, cr7, cr0, cr5, {3}
  54:	62000000 	andvs	r0, r0, #0
  58:	6b636f6c 	blvs	18dbe10 <vector_table-0x67241f0>
  5c:	5f676e69 	svcpl	0x00676e69
  60:	646e6168 	strbtvs	r6, [lr], #-360	; 0x168
  64:	0072656c 	rsbseq	r6, r2, ip, ror #10
  68:	000000f3 	strdeq	r0, [r0], -r3
  6c:	6c6c756e 	cfstr64vs	mvdx7, [ip], #-440	; 0xfffffe48
  70:	6e61685f 	mcrvs	8, 3, r6, cr1, cr15, {2}
  74:	72656c64 	rsbvc	r6, r5, #100, 24	; 0x6400
  78:	00010800 	andeq	r0, r1, r0, lsl #16
  7c:	72616800 	rsbvc	r6, r1, #0, 16
  80:	61665f64 	cmnvs	r6, r4, ror #30
  84:	5f746c75 	svcpl	0x00746c75
  88:	646e6168 	strbtvs	r6, [lr], #-360	; 0x168
  8c:	0072656c 	rsbseq	r6, r2, ip, ror #10
  90:	0000011d 	andeq	r0, r0, sp, lsl r1
  94:	5f6d656d 	svcpl	0x006d656d
  98:	616e616d 	cmnvs	lr, sp, ror #2
  9c:	685f6567 	ldmdavs	pc, {r0, r1, r2, r5, r6, r8, sl, sp, lr}^
  a0:	6c646e61 	stclvs	14, cr6, [r4], #-388	; 0xfffffe7c
  a4:	8e007265 	cdphi	2, 0, cr7, cr0, cr5, {3}
  a8:	76000001 	strvc	r0, [r0], -r1
  ac:	6f746365 	svcvs	0x00746365
  b0:	61745f72 	cmnvs	r4, r2, ror pc
  b4:	00656c62 	rsbeq	r6, r5, r2, ror #24
  b8:	000001a5 	andeq	r0, r0, r5, lsr #3
  bc:	01b50069 	undefined instruction 0x01b50069
  c0:	41480000 	cmpmi	r8, r0
  c4:	41464452 	cmpmi	r6, r2, asr r4
  c8:	5f544c55 	svcpl	0x00544c55
  cc:	00505350 	subseq	r5, r0, r0, asr r3
  d0:	000001cf 	andeq	r0, r0, pc, asr #3
  d4:	63617473 	cmnvs	r1, #1929379840	; 0x73000000
  d8:	6f705f6b 	svcvs	0x00705f6b
  dc:	65746e69 	ldrbvs	r6, [r4, #-3689]!	; 0xe69
  e0:	00000072 	andeq	r0, r0, r2, ror r0
  e4:	00160000 	andseq	r0, r6, r0
  e8:	00020000 	andeq	r0, r2, r0
  ec:	000002ac 	andeq	r0, r0, ip, lsr #5
  f0:	00000049 	andeq	r0, r0, r9, asr #32
  f4:	00000029 	andeq	r0, r0, r9, lsr #32
  f8:	006d7573 	rsbeq	r7, sp, r3, ror r5
  fc:	00000000 	andeq	r0, r0, r0

Disassembly of section .debug_aranges:

00000000 <.debug_aranges>:
   0:	0000001c 	andeq	r0, r0, ip, lsl r0
   4:	00000002 	andeq	r0, r0, r2
   8:	00040000 	andeq	r0, r4, r0
   c:	00000000 	andeq	r0, r0, r0
  10:	08000130 	stmdaeq	r0, {r4, r5, r8}
  14:	00000016 	andeq	r0, r0, r6, lsl r0
	...
  20:	0000001c 	andeq	r0, r0, ip, lsl r0
  24:	00ce0002 	sbceq	r0, lr, r2
  28:	00040000 	andeq	r0, r4, r0
  2c:	00000000 	andeq	r0, r0, r0
  30:	08000148 	stmdaeq	r0, {r3, r6, r8}
  34:	000000fe 	strdeq	r0, [r0], -lr
	...
  40:	0000001c 	andeq	r0, r0, ip, lsl r0
  44:	02ac0002 	adceq	r0, ip, #2
  48:	00040000 	andeq	r0, r4, r0
  4c:	00000000 	andeq	r0, r0, r0
  50:	c0000000 	andgt	r0, r0, r0
  54:	00000010 	andeq	r0, r0, r0, lsl r0
	...

Disassembly of section .debug_str:

00000000 <.debug_str>:
   0:	676e6f6c 	strbvs	r6, [lr, -ip, ror #30]!
   4:	6e6f6c20 	cdpvs	12, 6, cr6, cr15, cr0, {1}
   8:	6e692067 	cdpvs	0, 6, cr2, cr9, cr7, {3}
   c:	65640074 	strbvs	r0, [r4, #-116]!	; 0x74
  10:	6d007473 	cfstrsvs	mvf7, [r0, #-460]	; 0xfffffe34
  14:	2e6e6961 	cdpcs	9, 6, cr6, cr14, cr1, {3}
  18:	6f6c0063 	svcvs	0x006c0063
  1c:	6c20676e 	stcvs	7, cr6, [r0], #-440	; 0xfffffe48
  20:	20676e6f 	rsbcs	r6, r7, pc, ror #28
  24:	69736e75 	ldmdbvs	r3!, {r0, r2, r4, r5, r6, r9, sl, fp, sp, lr}^
  28:	64656e67 	strbtvs	r6, [r5], #-3687	; 0xe67
  2c:	746e6920 	strbtvc	r6, [lr], #-2336	; 0x920
  30:	554e4700 	strbpl	r4, [lr, #-1792]	; 0x700
  34:	34204320 	strtcc	r4, [r0], #-800	; 0x320
  38:	312e342e 	teqcc	lr, lr, lsr #8
  3c:	736e7500 	cmnvc	lr, #0, 10
  40:	656e6769 	strbvs	r6, [lr, #-1897]!	; 0x769
  44:	68632064 	stmdavs	r3!, {r2, r5, r6, sp}^
  48:	63007261 	movwvs	r7, #609	; 0x261
  4c:	6165646f 	cmnvs	r5, pc, ror #8
  50:	00726464 	rsbseq	r6, r2, r4, ror #8
  54:	6e69616d 	powvsez	f6, f1, #5.0
  58:	61737500 	cmnvs	r3, r0, lsl #10
  5c:	665f6567 	ldrbvs	r6, [pc], -r7, ror #10
  60:	746c7561 	strbtvc	r7, [ip], #-1377	; 0x561
  64:	6e61685f 	mcrvs	8, 3, r6, cr1, cr15, {2}
  68:	72656c64 	rsbvc	r6, r5, #100, 24	; 0x6400
  6c:	6f687300 	svcvs	0x00687300
  70:	75207472 	strvc	r7, [r0, #-1138]!	; 0x472
  74:	6769736e 	strbvs	r7, [r9, -lr, ror #6]!
  78:	2064656e 	rsbcs	r6, r4, lr, ror #10
  7c:	00746e69 	rsbseq	r6, r4, r9, ror #28
  80:	6d6f682f 	stclvs	8, cr6, [pc, #-188]!	; ffffffcc <sum+0x3fffffcc>
  84:	75732f65 	ldrbvc	r2, [r3, #-3941]!	; 0xf65
  88:	2f6c696e 	svccs	0x006c696e
  8c:	6767756a 	strbvs	r7, [r7, -sl, ror #10]!
  90:	616e7265 	cmnvs	lr, r5, ror #4
  94:	2f737475 	svccs	0x00737475
  98:	6a6f7270 	bvs	1bdca60 <vector_table-0x64235a0>
  9c:	2f746365 	svccs	0x00746365
  a0:	6767754a 	strbvs	r7, [r7, -sl, asr #10]!
  a4:	616e7265 	cmnvs	lr, r5, ror #4
  a8:	00737475 	rsbseq	r7, r3, r5, ror r4
  ac:	726f6873 	rsbvc	r6, pc, #7536640	; 0x730000
  b0:	6e692074 	mcrvs	0, 3, r2, cr9, cr4, {3}
  b4:	655f0074 	ldrbvs	r0, [pc, #-116]	; 48 <vector_table-0x7ffffb8>
  b8:	00737362 	rsbseq	r7, r3, r2, ror #6
  bc:	53434853 	movtpl	r4, #14419	; 0x3853
  c0:	74730052 	ldrbtvc	r0, [r3], #-82	; 0x52
  c4:	5f6b6361 	svcpl	0x006b6361
  c8:	6e696f70 	mcrvs	15, 3, r6, cr9, cr0, {3}
  cc:	00726574 	rsbseq	r6, r2, r4, ror r5
  d0:	74636576 	strbtvc	r6, [r3], #-1398	; 0x576
  d4:	745f726f 	ldrbvc	r7, [pc], #623	; dc <vector_table-0x7ffff24>
  d8:	656c6261 	strbvs	r6, [ip, #-609]!	; 0x261
  dc:	6c756e00 	ldclvs	14, cr6, [r5], #-0
  e0:	61685f6c 	cmnvs	r8, ip, ror #30
  e4:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0x46e
  e8:	655f0072 	ldrbvs	r0, [pc, #-114]	; 7e <vector_table-0x7ffff82>
  ec:	61746164 	cmnvs	r4, r4, ror #2
  f0:	6f6c6200 	svcvs	0x006c6200
  f4:	6e696b63 	vnmulvs.f64	d22, d9, d19
  f8:	61685f67 	cmnvs	r8, r7, ror #30
  fc:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0x46e
 100:	69750072 	ldmdbvs	r5!, {r1, r4, r5, r6}^
 104:	3233746e 	eorscc	r7, r3, #1845493760	; 0x6e000000
 108:	5f00745f 	svcpl	0x0000745f
 10c:	63617473 	cmnvs	r1, #1929379840	; 0x73000000
 110:	4148006b 	cmpmi	r8, fp, rrx
 114:	41464452 	cmpmi	r6, r2, asr r4
 118:	5f544c55 	svcpl	0x00544c55
 11c:	00505350 	subseq	r5, r0, r0, asr r3
 120:	6574655f 	ldrbvs	r6, [r4, #-1375]!	; 0x55f
 124:	72007478 	andvc	r7, r0, #120, 8	; 0x78000000
 128:	74657365 	strbtvc	r7, [r5], #-869	; 0x365
 12c:	6e61685f 	mcrvs	8, 3, r6, cr1, cr15, {2}
 130:	72656c64 	rsbvc	r6, r5, #100, 24	; 0x6400
 134:	72616800 	rsbvc	r6, r1, #0, 16
 138:	61665f64 	cmnvs	r6, r4, ror #30
 13c:	5f746c75 	svcpl	0x00746c75
 140:	646e6168 	strbtvs	r6, [lr], #-360	; 0x168
 144:	0072656c 	rsbseq	r6, r2, ip, ror #10
 148:	74636576 	strbtvc	r6, [r3], #-1398	; 0x576
 14c:	632e726f 	teqvs	lr, #-268435450	; 0xf0000006
 150:	61645f00 	cmnvs	r4, r0, lsl #30
 154:	6d006174 	stfvss	f6, [r0, #-464]	; 0xfffffe30
 158:	6d5f6d65 	ldclvs	13, cr6, [pc, #-404]	; ffffffcc <sum+0x3fffffcc>
 15c:	67616e61 	strbvs	r6, [r1, -r1, ror #28]!
 160:	61685f65 	cmnvs	r8, r5, ror #30
 164:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0x46e
 168:	75730072 	ldrbvc	r0, [r3, #-114]!	; 0x72
 16c:	00632e6d 	rsbeq	r2, r3, sp, ror #28

Disassembly of section .comment:

00000000 <.comment>:
   0:	43434700 	movtmi	r4, #14080	; 0x3700
   4:	5328203a 	teqpl	r8, #58	; 0x3a
   8:	6372756f 	cmnvs	r2, #465567744	; 0x1bc00000
   c:	20797265 	rsbscs	r7, r9, r5, ror #4
  10:	202b2b47 	eorcs	r2, fp, r7, asr #22
  14:	6574694c 	ldrbvs	r6, [r4, #-2380]!	; 0x94c
  18:	31303220 	teqcc	r0, r0, lsr #4
  1c:	2d317130 	ldfcss	f7, [r1, #-192]!	; 0xffffff40
  20:	29383831 	ldmdbcs	r8!, {r0, r4, r5, fp, ip, sp}
  24:	342e3420 	strtcc	r3, [lr], #-1056	; 0x420
  28:	0000312e 	andeq	r3, r0, lr, lsr #2
  2c:	3a434347 	bcc	10d0d50 <vector_table-0x6f2f2b0>
  30:	6f532820 	svcvs	0x00532820
  34:	65637275 	strbvs	r7, [r3, #-629]!	; 0x275
  38:	47207972 	undefined instruction 0x47207972
  3c:	4c202b2b 	stcmi	11, cr2, [r0], #-172	; 0xffffff54
  40:	20657469 	rsbcs	r7, r5, r9, ror #8
  44:	30313032 	eorscc	r3, r1, r2, lsr r0
  48:	312d3171 	teqcc	sp, r1, ror r1
  4c:	20293838 	eorcs	r3, r9, r8, lsr r8
  50:	2e342e34 	mrccs	14, 1, r2, cr4, cr4, {1}
  54:	47000031 	smladxmi	r0, r1, r0, r0
  58:	203a4343 	eorscs	r4, sl, r3, asr #6
  5c:	756f5328 	strbvc	r5, [pc, #-808]!	; fffffd3c <sum+0x3ffffd3c>
  60:	72656372 	rsbvc	r6, r5, #-939524095	; 0xc8000001
  64:	2b472079 	blcs	11c8250 <vector_table-0x6e37db0>
  68:	694c202b 	stmdbvs	ip, {r0, r1, r3, r5, sp}^
  6c:	32206574 	eorcc	r6, r0, #116, 10	; 0x1d000000
  70:	71303130 	teqvc	r0, r0, lsr r1
  74:	38312d31 	ldmdacc	r1!, {r0, r4, r5, r8, sl, fp, sp}
  78:	34202938 	strtcc	r2, [r0], #-2360	; 0x938
  7c:	312e342e 	teqcc	lr, lr, lsr #8
	...

Disassembly of section .ARM.attributes:

00000000 <.ARM.attributes>:
   0:	00003041 	andeq	r3, r0, r1, asr #32
   4:	61656100 	cmnvs	r5, r0, lsl #2
   8:	01006962 	tsteq	r0, r2, ror #18
   c:	00000026 	andeq	r0, r0, r6, lsr #32
  10:	524f4305 	subpl	r4, pc, #335544320	; 0x14000000
  14:	2d584554 	cfldr64cs	mvdx4, [r8, #-336]	; 0xfffffeb0
  18:	0600334d 	streq	r3, [r0], -sp, asr #6
  1c:	094d070a 	stmdbeq	sp, {r1, r3, r8, r9, sl}^
  20:	14041202 	strne	r1, [r4], #-514	; 0x202
  24:	17011501 	strne	r1, [r1, -r1, lsl #10]
  28:	19011803 	stmdbne	r1, {r0, r1, fp, ip}
  2c:	1e011a01 	vmlane.f32	s2, s2, s2
  30:	Address 0x00000030 is out of bounds.


Disassembly of section .debug_frame:

00000000 <.debug_frame>:
   0:	0000000c 	andeq	r0, r0, ip
   4:	ffffffff 	undefined instruction 0xffffffff
   8:	7c020001 	stcvc	0, cr0, [r2], {1}
   c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
  10:	0000001c 	andeq	r0, r0, ip, lsl r0
  14:	00000000 	andeq	r0, r0, r0
  18:	08000130 	stmdaeq	r0, {r4, r5, r8}
  1c:	0000000c 	andeq	r0, r0, ip
  20:	41080e41 	tstmi	r8, r1, asr #28
  24:	8e41180e 	cdphi	8, 4, cr1, cr1, cr14, {0}
  28:	0d028701 	stceq	7, cr8, [r2, #-4]
  2c:	00000007 	andeq	r0, r0, r7
  30:	00000014 	andeq	r0, r0, r4, lsl r0
  34:	00000000 	andeq	r0, r0, r0
  38:	0800013c 	stmdaeq	r0, {r2, r3, r4, r5, r8}
  3c:	0000000a 	andeq	r0, r0, sl
  40:	41040e41 	tstmi	r4, r1, asr #28
  44:	070d0187 	streq	r0, [sp, -r7, lsl #3]
  48:	0000000c 	andeq	r0, r0, ip
  4c:	ffffffff 	undefined instruction 0xffffffff
  50:	7c020001 	stcvc	0, cr0, [r2], {1}
  54:	000d0c0e 	andeq	r0, sp, lr, lsl #24
  58:	0000001c 	andeq	r0, r0, ip, lsl r0
  5c:	00000048 	andeq	r0, r0, r8, asr #32
  60:	08000148 	stmdaeq	r0, {r3, r6, r8}
  64:	000000ba 	strheq	r0, [r0], -sl
  68:	41080e41 	tstmi	r8, r1, asr #28
  6c:	8e41180e 	cdphi	8, 4, cr1, cr1, cr14, {0}
  70:	0d028701 	stceq	7, cr8, [r2, #-4]
  74:	00000007 	andeq	r0, r0, r7
  78:	00000014 	andeq	r0, r0, r4, lsl r0
  7c:	00000048 	andeq	r0, r0, r8, asr #32
  80:	08000204 	stmdaeq	r0, {r2, r9}
  84:	00000020 	andeq	r0, r0, r0, lsr #32
  88:	41040e41 	tstmi	r4, r1, asr #28
  8c:	070d0187 	streq	r0, [sp, -r7, lsl #3]
  90:	00000014 	andeq	r0, r0, r4, lsl r0
  94:	00000048 	andeq	r0, r0, r8, asr #32
  98:	08000224 	stmdaeq	r0, {r2, r5, r9}
  9c:	0000000a 	andeq	r0, r0, sl
  a0:	41040e41 	tstmi	r4, r1, asr #28
  a4:	070d0187 	streq	r0, [sp, -r7, lsl #3]
  a8:	00000014 	andeq	r0, r0, r4, lsl r0
  ac:	00000048 	andeq	r0, r0, r8, asr #32
  b0:	08000230 	stmdaeq	r0, {r4, r5, r9}
  b4:	0000000a 	andeq	r0, r0, sl
  b8:	41040e41 	tstmi	r4, r1, asr #28
  bc:	070d0187 	streq	r0, [sp, -r7, lsl #3]
  c0:	00000014 	andeq	r0, r0, r4, lsl r0
  c4:	00000048 	andeq	r0, r0, r8, asr #32
  c8:	0800023c 	stmdaeq	r0, {r2, r3, r4, r5, r9}
  cc:	0000000a 	andeq	r0, r0, sl
  d0:	41040e41 	tstmi	r4, r1, asr #28
  d4:	070d0187 	streq	r0, [sp, -r7, lsl #3]
  d8:	0000000c 	andeq	r0, r0, ip
  dc:	ffffffff 	undefined instruction 0xffffffff
  e0:	7c020001 	stcvc	0, cr0, [r2], {1}
  e4:	000d0c0e 	andeq	r0, sp, lr, lsl #24
  e8:	00000014 	andeq	r0, r0, r4, lsl r0
  ec:	000000d8 	ldrdeq	r0, [r0], -r8
  f0:	c0000000 	andgt	r0, r0, r0
  f4:	00000010 	andeq	r0, r0, r0, lsl r0
  f8:	41040e41 	tstmi	r4, r1, asr #28
  fc:	070d0187 	streq	r0, [sp, -r7, lsl #3]

Disassembly of section .debug_ranges:

00000000 <.debug_ranges>:
   0:	08000248 	stmdaeq	r0, {r3, r6, r9}
   4:	08000248 	stmdaeq	r0, {r3, r6, r9}
   8:	c0000000 	andgt	r0, r0, r0
   c:	c0000010 	andgt	r0, r0, r0, lsl r0
	...
